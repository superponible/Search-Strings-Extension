#!/bin/bash

FSSTAT_CMD="/usr/local/bin/fsstat"
GREP_CMD="/bin/grep"
AWK_CMD="/usr/bin/awk"
BC_CMD="/usr/bin/bc"
PASTE_CMD="/usr/bin/paste"
RM_CMD="/bin/rm"

usage()
{
cat << EOF
usage: $0 [-h] [-b blocksize] [-i imagefile] [-o outfile] -s srch_strings_output 

$0 must be used with an output file from srch_strings (supplied with the -s argument)
	$0 expects the first column of srch_strings_output to be the offset in bytes of
	the string given in decimal ("-t d" argument to srch_strings).  It will output the file
	with an additional two columns in front: the block the string is in, and the offset
	in bytes within that block.

OPTIONS:
   -h      Print this help message
   -b      block size of filesystem in imagefile (not needed if -i is used)
   -i      imagefile (will use fsstat to determine block size)
   -s	   output of srch_strings run with "-t d" option
   -o	   output file, will output to stdout if not specified
EOF
}

BLOCKSIZE=
IMAGE=
STRINGS=
OUTFILE=
while getopts “hb:i:s:o:” OPTION; do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         b)
             BLOCKSIZE=$OPTARG
             ;;
         i)
             IMAGE=$OPTARG
             ;;
         s)
             STRINGS=$OPTARG
             ;;
	 o)
	     OUTFILE=$OPTARG
	     ;;
         \?)
             usage
             exit
             ;;
     esac
done

if [[ -z $STRINGS ]]
then
     usage
     exit 1
fi

if [[ -z $BLOCKSIZE ]]
then
	if [[ -z $IMAGE ]]
	then
		usage
		exit 1
	else
		$FSSTAT_CMD $IMAGE > /dev/null 2>&1
		if [[ $? == 0 ]]
		then	
			BLOCKSIZE=$($FSSTAT_CMD $IMAGE | $GREP_CMD "Block Size" | $AWK_CMD '{print $3}')
		else
			echo "Cannot determine filesystem type. Use the -b option if you know the blocksize."
			exit 1
		fi
	fi
fi

$AWK_CMD '{print $1"/'$BLOCKSIZE'"}' $STRINGS | $BC_CMD > srch_blocks.tmp 
$AWK_CMD '{print $1"%'$BLOCKSIZE'"}' $STRINGS | $BC_CMD > srch_offset.tmp 
if [[ -z $OUTFILE ]]
then
	$PASTE_CMD srch_blocks.tmp srch_offset.tmp | $PASTE_CMD - $STRINGS
else
	$PASTE_CMD srch_blocks.tmp srch_offset.tmp | $PASTE_CMD - $STRINGS > $OUTFILE
fi
$RM_CMD srch_blocks.tmp
$RM_CMD srch_offset.tmp

exit 0
